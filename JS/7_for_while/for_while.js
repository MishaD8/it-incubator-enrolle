// цикл while

// Синтаксис
/*
while (Условие) {
    тело цикла
    тут будет выполняться код
}
*/

// Пример 
let num = 0;
while (num < 5) {
    console.log(num);
    num++;
}

// Пример 
let num1 = 5;
while (num1) {
    console.log(num1);
    num1--;
}

//следует помнить одно: true - бежим, false - останавливаемся. 

// Пример без {}
let num2 = 5;
while (num2) console.log(num2--);

// конструкция DO...WHILE
let num3 = 0;
do {
    console.log(num3);
    num3++;
} while (num3 < 5);
// этот способ необходимо использовать тогда, когда нам необходимо одно выполнение
// выполнение цикла в независимости от того вернет условие true или нет.

// цикл FOR (самая популярная реализация цикла хоть и более сложная)

/*
Синтаксис

for (начало; условие; шаг) {
    тело цикла
    тут будет выполняться код
}
*/

// пример 
for (let num = 0; num < 5; num++) {
    console.log(num);
}
/*
работа цикла for:
1) выполняется начало - let num = 0
2) выполняется условие - num < 5
3) если условие true выполняется тело цикла - console.log(num)
4) выполняется шаг - num++
повтор начиная с пункта №2

*/
// "встроенное" объявление переменной
for (let num = 0; num < 5; num++) {
    console.log(num);
}
//console.log(num); - получим ошибку так как за пределами области 
// видимости блока используем console

// существующая переменная 
let num4;
for (num4 = 0; num4 < 5; num4++) {
    console.log(num4);
}
console.log(`Вывод вне цикла: ${num4}`);

// можно убрать любую часть цикла и все будет работать также хорошо
let num5 = 0;
for (; num5 < 5; ) {
    console.log(num5);
    num5++;
}

// директива break

let num6 = 0;
for (; num6 < 5; num6++) {
    console.log(num6);
    if (num6 == 2) break;
}
console.log(`работа окончена, num6 = ${num6}`);

//директива continue

let num7 = 0;
for (; num7 < 5; num7++) {
    if (num7 == 2) continue;
    console.log(num7);
}

// директива break/continue и "?"


let num8 = 0;
for (; num8 < 5; num8++) {
//    (num8 != 2) ? console.log(num8) : continue;  будет ошибка ("?" этот оператор не работает)
}

// метки 
firstFor: for (let num9 = 0; num9 < 2; num9++) {
    for (let size = 0; size < 3; size++) {
        if (size == 2) {
            break firstFor;
        }
        console.log(size);
    }
}

firstFor: for (let num9 = 0; num9 < 2; num9++) {
    for (let size = 0; size < 3; size++) {
        if (size == 2) {
            continue firstFor;
        }
        console.log(size);
    }
}

/*
Итоги
1. while - проверяет условие перед каждой итерацией.
2. do..while - проверяет условие после каждой итерации.
3. for (;;) - проверяет условие перед каждой итерацией, есть возможность задать
    дополнительные настройки.

Чтобы организовать бесконечный цикл, использует конструкцию while (true).
При этом он, как и любой другой цикл, может быть прерван директивой break.

Если на данной итерации цикла делать больше ничего не надо, но полностью 
прекращать цикл не следует - используют директиву continue.

Обе этих директивы поддерживают метки, которые ставятся перед циклом. Метки - единственный 
способ для break / continue выйти за пределы текущего цикла, повлиять на выполнение внешнего.
Помним, что метки не позволяют прыгнуть в произвольное место кода, в JavaScript нет такой 
возможности.

Конечно же в JavaScript существуют и другие методы перебора. Например, перебор объектов или 
массивов. 
*/


